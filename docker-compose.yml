version: '3.8'

services:
  php:
    image: achrafes20/dev-php-laravel-angular:latest
    container_name: php-container
    volumes:
      - ./src/laravel:/var/www/html
    environment:
      - DB_HOST=mysql
      - DB_DATABASE=${DB_DATABASE:-dev_db}
      - DB_USERNAME=${DB_USERNAME:-dev_user}
      - DB_PASSWORD=${DB_PASSWORD:-dev_password}
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "php", "-v"]
      interval: 30s
      timeout: 10s

  nginx:
    image: nginx:alpine
    container_name: nginx-container
    ports:
      - "8080:80"
    volumes:
      - ./src/laravel:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      php:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root_password}
      MYSQL_DATABASE: ${DB_DATABASE:-dev_db}
      MYSQL_USER: ${DB_USERNAME:-dev_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-dev_password}
      MYSQL_ROOT_HOST: '%'
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "3306:3306"
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 10s
      retries: 10

  angular:
    image: achrafes20/dev-php-laravel-angular:latest
    container_name: angular-container
    volumes:
      - ./src/angular:/usr/src/app
      - /usr/src/app/node_modules  # Empêche l'écrasement des node_modules
    working_dir: /usr/src/app
    ports:
      - "4200:4200"
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true  # Améliore le hot-reload sous Docker
    command: >
      sh -c "if [ ! -d \"angular-app\" ]; then
               ng new angular-app --defaults --skip-git --skip-install &&
               cd angular-app &&
               npm install;
             else
               cd angular-app;
             fi &&
             ng serve --host 0.0.0.0 --poll 1000 --disable-host-check"
    networks:
      - app-network
    restart: unless-stopped

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin-container
    depends_on:
      mysql:
        condition: service_healthy
    ports:
      - "8081:80"
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: ${DB_ROOT_PASSWORD:-root_password}
      PMA_PORT: 3306
    networks:
      - app-network
    restart: unless-stopped

volumes:
  mysql_data:
    driver: local

networks:
  app-network:
    driver: bridge